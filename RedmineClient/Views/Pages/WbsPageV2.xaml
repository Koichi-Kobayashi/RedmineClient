<Page
    x:Class="RedmineClient.Views.Pages.WbsPageV2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:beh="clr-namespace:RedmineClient.Behaviors"
    xmlns:conv="clr-namespace:RedmineClient.Helpers"
    xmlns:convM="clr-namespace:RedmineClient.Helpers.Multi"
    xmlns:ctrls="clr-namespace:RedmineClient.Views.Controls"
    xmlns:vm="clr-namespace:RedmineClient.ViewModels.Pages"
    Loaded="Page_Loaded">


    <Page.Resources>
        <conv:LevelToIndentConverter x:Key="LevelToIndent" />
        <conv:RowIndexToTopConverter x:Key="RowToTop" />
        <conv:CriticalToBrushConverter x:Key="CriticalBrush" />
        <convM:EsToXConverter x:Key="EsToX" />
        <convM:DurationToWidthConverter x:Key="DurToW" />



        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCritical}" Value="True">
                    <Setter Property="Background" Value="#FFFFE5E5" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Height="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=ActualHeight}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="840" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ToolBar Grid.ColumnSpan="3">
            <TextBlock Margin="0,0,8,0" VerticalAlignment="Center">プロジェクト</TextBlock>
            <ComboBox Width="220" DisplayMemberPath="Name" ItemsSource="{Binding AvailableProjects}" SelectedItem="{Binding SelectedProject, Mode=TwoWay}" />
            <Separator />
            <TextBlock Margin="0,0,8,0" VerticalAlignment="Center">Zoom</TextBlock>
            <Slider Width="180" Maximum="40" Minimum="4" Value="{Binding DayWidth, Mode=TwoWay}" />
            <Separator />
            <Button Click="Recalc_Click" Content="Recalc CPM" />
            <Separator />
            <CheckBox Content="ES〜Slackを表示" IsChecked="{Binding ShowScheduleColumns, Mode=TwoWay}" />
            <Separator />
            <TextBlock Margin="8,0,4,0" Text="Start:" />
            <DatePicker SelectedDate="{Binding ViewStart, Mode=TwoWay}" />
        </ToolBar>

        <!--  右側上部にタイムライン（曜日+日付）  -->
        <ctrls:TimelineHeader Grid.Row="1" Grid.Column="2" Height="64" DayWidth="{Binding DayWidth}" StartDate="{Binding ViewStart}" />

        <!--  左ペインの固定枠  -->
        <Border
            Grid.Row="2" Grid.Column="0" Margin="0" Background="White" BorderBrush="#CCCCCC"
            BorderThickness="1">
            <DataGrid
                x:Name="LeftGrid" Width="920" Margin="0,-62,0,0" beh:ScrollSyncBehavior.GroupKey="WBS" beh:ScrollSyncBehavior.IsMaster="True"
                CellEditEnding="LeftGrid_CellEditEnding" FrozenColumnCount="1"
                ItemsSource="{Binding Tasks}"
                PreviewMouseLeftButtonDown="LeftGrid_PreviewMouseLeftButtonDown" PreviewMouseMove="LeftGrid_PreviewMouseMove" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
                SelectionChanged="LeftGrid_SelectionChanged">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Height" Value="28" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="VerticalAlignment" Value="Top" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridRow_PreviewMouseLeftButtonDown" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Height" Value="62" />
                        <Setter Property="Padding" Value="4,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Background" Value="#F5F5F5" />
                        <Setter Property="BorderBrush" Value="#CCCCCC" />
                        <Setter Property="BorderThickness" Value="0,0,1,0" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="VerticalAlignment" Value="Top" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderBrush" Value="#CCCCCC" />
                        <Setter Property="BorderThickness" Value="0,0,1,0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="4,2" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="ColId" Width="60" MinWidth="60" Binding="{Binding WbsNo}" Header="ID" />
                    <DataGridTemplateColumn Width="400" Header="タスク">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel MouseMove="TaskCell_MouseMove" Orientation="Horizontal" PreviewMouseLeftButtonDown="TaskCell_PreviewMouseLeftButtonDown">
                                    <Border Width="{Binding Level, Converter={StaticResource LevelToIndent}}" />
                                    <TextBlock Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="120" Header="先行">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border
                                    Padding="4,2" AllowDrop="True" Background="#FFF8F8F8" BorderBrush="#33000000" BorderThickness="1"
                                    CornerRadius="2" DragEnter="PredecessorCell_DragEnter" DragLeave="PredecessorCell_DragLeave" DragOver="PredecessorCell_DragOver" Drop="PredecessorCell_Drop">
                                    <TextBlock Foreground="Black" Text="{Binding PredecessorIds}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="130" Header="開始日">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding StartDate, StringFormat=yyyy/MM/dd}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="130" Header="終了日">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DueDate, StringFormat=yyyy/MM/dd}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Width="80" MinWidth="80" Binding="{Binding Duration}" Header="期間" />
                    <DataGridTemplateColumn Width="80" Header="優先度">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Padding="2,0" Background="{Binding Priority, Converter={x:Static conv:PriorityToBrushConverter.Instance}}" CornerRadius="2">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11" Foreground="White" Text="{Binding Priority}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox SelectedValue="{Binding Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="緊急" />
                                    <ComboBoxItem Content="高" />
                                    <ComboBoxItem Content="中" />
                                    <ComboBoxItem Content="低" />
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn x:Name="ColES" Width="*" Binding="{Binding ES}" Header="ES">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="ColEF" Width="*" Binding="{Binding EF}" Header="EF">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="ColLS" Width="*" Binding="{Binding LS}" Header="LS">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="ColLF" Width="*" Binding="{Binding LF}" Header="LF">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="ColSlack" Width="*" Binding="{Binding Slack}" Header="Slack">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <GridSplitter Grid.Row="2" Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

        <ScrollViewer
            x:Name="RightScroll" Grid.Row="2" Grid.Column="2" beh:ScrollSyncBehavior.GroupKey="WBS" beh:ScrollSyncBehavior.IsMaster="True"
            CanContentScroll="False" Focusable="True" HorizontalScrollBarVisibility="Visible" IsTabStop="True" PreviewMouseWheel="RightScroll_PreviewMouseWheel"
            VerticalScrollBarVisibility="Visible">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ctrls:TimelineGridOverlay Grid.Row="0" DayWidth="{Binding DayWidth}" IsHitTestVisible="False" LineBrush="#22000000" StartDate="{Binding ViewStart}" />
                <ItemsControl Grid.Row="0" ItemsSource="{Binding Tasks}" PreviewMouseWheel="RightItems_PreviewMouseWheel">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Width="{Binding DataContext.TimelineWidth, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Height="{Binding DataContext.TimelineHeight, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Background="Transparent" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Height" Value="28" />
                            <Setter Property="Canvas.Top" Value="{Binding RowIndex, Converter={StaticResource RowToTop}}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border
                                Height="18" MinWidth="10" beh:DragMoveBehavior.IsEnabled="True"
                                Background="{Binding IsCritical, Converter={StaticResource CriticalBrush}}"
                                CornerRadius="4"
                                ToolTip="{Binding Name}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="BorderBrush" Value="#55000000" />
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="BorderBrush" Value="#FF0078D4" />
                                                <Setter Property="BorderThickness" Value="4" />
                                                <Setter Property="Panel.ZIndex" Value="1000" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Background" Value="LightBlue" />
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Color="Blue" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Border.RenderTransform>
                                    <TranslateTransform>
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{StaticResource EsToX}">
                                                <Binding Path="ES" />
                                                <Binding Path="DataContext.DayWidth" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                    </TranslateTransform>
                                </Border.RenderTransform>
                                <Border.Width>
                                    <MultiBinding Converter="{StaticResource DurToW}">
                                        <Binding Path="Duration" />
                                        <Binding Path="DataContext.DayWidth" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                    </MultiBinding>
                                </Border.Width>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <!--  スクロール領域を確保するフィラー。タイムラインの高さに合わせてScrollViewerのExtentを拡張する  -->
                <Border Grid.Row="1" Height="{Binding TimelineHeight}" Background="Transparent" IsHitTestVisible="False" />
            </Grid>
        </ScrollViewer>
    </Grid>
</Page>


