<Page x:Class="RedmineClient.Views.Pages.WbsPageV2"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:vm="clr-namespace:RedmineClient.ViewModels.Pages"
      xmlns:conv="clr-namespace:RedmineClient.Helpers"
      xmlns:convM="clr-namespace:RedmineClient.Helpers.Multi"
      xmlns:beh="clr-namespace:RedmineClient.Behaviors"
      xmlns:ctrls="clr-namespace:RedmineClient.Views.Controls">


  <Page.Resources>
    <conv:LevelToIndentConverter x:Key="LevelToIndent"/>
    <conv:RowIndexToTopConverter x:Key="RowToTop"/>
    <conv:CriticalToBrushConverter x:Key="CriticalBrush"/>
    <convM:EsToXConverter x:Key="EsToX"/>
    <convM:DurationToWidthConverter x:Key="DurToW"/>



    <Style TargetType="DataGridRow">
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsCritical}" Value="True">
          <Setter Property="Background" Value="#FFFFE5E5"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </Page.Resources>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="440"/>
      <ColumnDefinition Width="5"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <ToolBar Grid.ColumnSpan="3">
      <TextBlock Margin="0,0,8,0" VerticalAlignment="Center">プロジェクト</TextBlock>
      <ComboBox Width="220"
                ItemsSource="{Binding AvailableProjects}"
                DisplayMemberPath="Name"
                SelectedItem="{Binding SelectedProject, Mode=TwoWay}"/>
      <Separator/>
      <TextBlock Margin="0,0,8,0" VerticalAlignment="Center">Zoom</TextBlock>
      <Slider Width="180" Minimum="4" Maximum="40" Value="{Binding DayWidth, Mode=TwoWay}"/>
      <Separator/>
      <Button Content="Recalc CPM" Click="Recalc_Click"/>
      <Separator/>
      <CheckBox Content="ES〜Slackを表示" IsChecked="{Binding ShowScheduleColumns, Mode=TwoWay}"/>
      <Separator/>
      <TextBlock Text="Start:" Margin="8,0,4,0"/>
      <DatePicker SelectedDate="{Binding ViewStart, Mode=TwoWay}"/>
    </ToolBar>

    <!-- 右側上部にタイムライン（曜日+日付） -->
    <ctrls:TimelineHeader Grid.Column="2" Grid.Row="1" Height="64"
                          DayWidth="{Binding DayWidth}"
                          StartDate="{Binding ViewStart}"/>

    <DataGrid x:Name="LeftGrid" Grid.Row="1" Grid.Column="0" Grid.RowSpan="2"
              ItemsSource="{Binding Tasks}"
              HeadersVisibility="Column"
              CanUserAddRows="False" CanUserDeleteRows="False"
              AutoGenerateColumns="False"
              EnableRowVirtualization="True" EnableColumnVirtualization="True"
              GridLinesVisibility="None"
              CellEditEnding="LeftGrid_CellEditEnding"
              PreviewMouseLeftButtonDown="LeftGrid_PreviewMouseLeftButtonDown"
              PreviewMouseMove="LeftGrid_PreviewMouseMove"
              SelectionMode="Single" SelectionUnit="FullRow"
              SelectionChanged="LeftGrid_SelectionChanged"
              ScrollViewer.HorizontalScrollBarVisibility="Auto"
              ScrollViewer.VerticalScrollBarVisibility="Auto"
              beh:ScrollSyncBehavior.GroupKey="WBS" beh:ScrollSyncBehavior.IsMaster="True"
              RowHeaderWidth="0"
              AlternatingRowBackground="Transparent"
              Background="White"
              Margin="0"
              Padding="0">
      <DataGrid.Style>
        <Style TargetType="DataGrid">
          <Setter Property="VerticalAlignment" Value="Top"/>
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
          <Setter Property="Margin" Value="0"/>
          <Setter Property="Padding" Value="0"/>
        </Style>
      </DataGrid.Style>
      <DataGrid.RowStyle>
        <Style TargetType="DataGridRow">
          <Setter Property="Height" Value="28"/>
          <Setter Property="BorderBrush" Value="#0078D4"/>
          <Setter Property="BorderThickness" Value="0"/>
          <Setter Property="Margin" Value="0"/>
          <Setter Property="VerticalAlignment" Value="Top"/>
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
          <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridRow_PreviewMouseLeftButtonDown"/>
          <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="BorderThickness" Value="2"/>
              <Setter Property="Background" Value="Transparent"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowStyle>
      <DataGrid.ColumnHeaderStyle>
        <Style TargetType="DataGridColumnHeader">
          <Setter Property="Height" Value="64"/>
          <Setter Property="Padding" Value="4,2"/>
          <Setter Property="HorizontalContentAlignment" Value="Center"/>
          <Setter Property="VerticalContentAlignment" Value="Center"/>
          <Setter Property="Background" Value="#F5F5F5"/>
          <Setter Property="BorderBrush" Value="#CCCCCC"/>
          <Setter Property="BorderThickness" Value="0,0,1,0"/>
          <Setter Property="FontWeight" Value="Bold"/>
          <Setter Property="Margin" Value="0"/>
          <Setter Property="VerticalAlignment" Value="Top"/>
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
      </DataGrid.ColumnHeaderStyle>
      <DataGrid.CellStyle>
        <Style TargetType="DataGridCell">
          <Setter Property="BorderBrush" Value="#CCCCCC"/>
          <Setter Property="BorderThickness" Value="0,0,1,0"/>
          <Setter Property="Margin" Value="0"/>
          <Setter Property="Padding" Value="4,2"/>
        </Style>
      </DataGrid.CellStyle>
      <DataGrid.Columns>
        <DataGridTextColumn x:Name="ColId" Header="ID" Binding="{Binding WbsNo}"
                             MinWidth="60" Width="60"/>
        <DataGridTemplateColumn Header="タスク" Width="200">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <StackPanel Orientation="Horizontal"
                          PreviewMouseLeftButtonDown="TaskCell_PreviewMouseLeftButtonDown"
                          MouseMove="TaskCell_MouseMove">
                <Border Width="{Binding Level, Converter={StaticResource LevelToIndent}}"/>
                <TextBlock Text="{Binding Name}"/>
              </StackPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="先行" Width="120">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Border Background="#FFF8F8F8" BorderBrush="#33000000" BorderThickness="1" CornerRadius="2"
                      AllowDrop="True"
                      DragEnter="PredecessorCell_DragEnter"
                      DragOver="PredecessorCell_DragOver"
                      DragLeave="PredecessorCell_DragLeave"
                      Drop="PredecessorCell_Drop"
                      Padding="4,2">
                <TextBlock Text="{Binding PredecessorIds}"/>
              </Border>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="開始日" Width="130">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding StartDate, StringFormat=yyyy/MM/dd}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <DatePicker SelectedDate="{Binding StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="終了日" Width="130">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding DueDate, StringFormat=yyyy/MM/dd}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <DatePicker SelectedDate="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="期間" Binding="{Binding Duration}" Width="*"/>
        <DataGridTemplateColumn Header="優先度" Width="80">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Border Padding="2,0" Background="{Binding Priority, Converter={x:Static conv:PriorityToBrushConverter.Instance}}" CornerRadius="2">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11" Foreground="White" Text="{Binding Priority}"/>
              </Border>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <ComboBox SelectedValue="{Binding Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBoxItem Content="緊急"/>
                <ComboBoxItem Content="高"/>
                <ComboBoxItem Content="中"/>
                <ComboBoxItem Content="低"/>
              </ComboBox>
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn x:Name="ColES" Header="ES" Binding="{Binding ES}" Width="*">
          <DataGridTextColumn.ElementStyle>
            <Style TargetType="TextBlock">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.ElementStyle>
          <DataGridTextColumn.EditingElementStyle>
            <Style TargetType="TextBox">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.EditingElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn x:Name="ColEF" Header="EF" Binding="{Binding EF}" Width="*">
          <DataGridTextColumn.ElementStyle>
            <Style TargetType="TextBlock">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.ElementStyle>
          <DataGridTextColumn.EditingElementStyle>
            <Style TargetType="TextBox">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.EditingElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn x:Name="ColLS" Header="LS" Binding="{Binding LS}" Width="*">
          <DataGridTextColumn.ElementStyle>
            <Style TargetType="TextBlock">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.ElementStyle>
          <DataGridTextColumn.EditingElementStyle>
            <Style TargetType="TextBox">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.EditingElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn x:Name="ColLF" Header="LF" Binding="{Binding LF}" Width="*">
          <DataGridTextColumn.ElementStyle>
            <Style TargetType="TextBlock">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.ElementStyle>
          <DataGridTextColumn.EditingElementStyle>
            <Style TargetType="TextBox">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.EditingElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn x:Name="ColSlack" Header="Slack" Binding="{Binding Slack}" Width="*">
          <DataGridTextColumn.ElementStyle>
            <Style TargetType="TextBlock">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.ElementStyle>
          <DataGridTextColumn.EditingElementStyle>
            <Style TargetType="TextBox">
              <Setter Property="Visibility" Value="{Binding DataContext.ShowScheduleColumns, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={x:Static conv:BoolToVisibilityConverter.Instance}}"/>
            </Style>
          </DataGridTextColumn.EditingElementStyle>
        </DataGridTextColumn>
      </DataGrid.Columns>
    </DataGrid>

    <GridSplitter Grid.Column="1" Grid.RowSpan="3" Width="5" HorizontalAlignment="Stretch"/>

    <ScrollViewer x:Name="RightScroll" Grid.Row="2" Grid.Column="2"
                  HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Auto"
                  beh:ScrollSyncBehavior.GroupKey="WBS" beh:ScrollSyncBehavior.IsMaster="False"
                  CanContentScroll="False">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ctrls:TimelineGridOverlay Grid.Row="0" IsHitTestVisible="False"
                                   DayWidth="{Binding DayWidth}"
                                   StartDate="{Binding ViewStart}"
                                   LineBrush="#22000000"/>
        <ItemsControl Grid.Row="0" ItemsSource="{Binding Tasks}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Canvas Width="{Binding DataContext.TimelineWidth, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                      Height="{Binding DataContext.TimelineHeight, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                      Background="Transparent"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemContainerStyle>
            <Style TargetType="ContentPresenter">
              <Setter Property="Height" Value="28"/>
              <Setter Property="Canvas.Top" Value="{Binding RowIndex, Converter={StaticResource RowToTop}}"/>
            </Style>
          </ItemsControl.ItemContainerStyle>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Border Height="18" CornerRadius="4" ToolTip="{Binding Name}"
                      beh:DragMoveBehavior.IsEnabled="True"
                      Background="{Binding IsCritical, Converter={StaticResource CriticalBrush}}"
                      MinWidth="10">
                <Border.Style>
                  <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="#55000000"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="BorderBrush" Value="#FF0078D4"/>
                        <Setter Property="BorderThickness" Value="4"/>
                        <Setter Property="Panel.ZIndex" Value="1000"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Background" Value="LightBlue"/>
                        <Setter Property="Effect">
                          <Setter.Value>
                            <DropShadowEffect Color="Blue" BlurRadius="5" ShadowDepth="0"/>
                          </Setter.Value>
                        </Setter>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Border.Style>
                <Border.RenderTransform>
                  <TranslateTransform>
                    <TranslateTransform.X>
                      <MultiBinding Converter="{StaticResource EsToX}">
                        <Binding Path="ES"/>
                        <Binding Path="DataContext.DayWidth" RelativeSource="{RelativeSource AncestorType=ItemsControl}"/>
                      </MultiBinding>
                    </TranslateTransform.X>
                  </TranslateTransform>
                </Border.RenderTransform>
                <Border.Width>
                  <MultiBinding Converter="{StaticResource DurToW}">
                    <Binding Path="Duration"/>
                    <Binding Path="DataContext.DayWidth" RelativeSource="{RelativeSource AncestorType=ItemsControl}"/>
                  </MultiBinding>
                </Border.Width>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Grid>
    </ScrollViewer>
  </Grid>
</Page>


