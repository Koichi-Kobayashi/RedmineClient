<Page
    x:Class="RedmineClient.Views.Pages.WbsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:RedmineClient.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:RedmineClient.Models"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="WBS"
    d:DesignHeight="800"
    d:DesignWidth="1800"
    mc:Ignorable="d">

    <Grid Margin="5,0,5,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  プロジェクト選択  -->
        <Grid Grid.Row="0" Margin="0,0,0,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="1600" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ui:TextBlock Grid.Column="0" Margin="0,0,8,0" VerticalAlignment="Center" Text="プロジェクト:" />

            <ComboBox
                x:Name="ProjectComboBox" Grid.Column="1" Margin="0,0,16,0" DisplayMemberPath="Name"
                IsEnabled="{Binding ViewModel.IsProjectSelectionReadOnly, Converter={x:Static helpers:BooleanInverseConverter.Instance}}"
                ItemsSource="{Binding ViewModel.AvailableProjects}"
                SelectedItem="{Binding ViewModel.SelectedProject, Mode=TwoWay}" />

            <!--<ui:TextBlock Grid.Column="2" Margin="0,8,0,0" VerticalAlignment="Center" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text="{Binding ViewModel.ProjectSelectionDescription}" />-->

            <!--  タスク管理ボタン  -->
            <StackPanel Grid.Column="2" Margin="0,0,0,0" VerticalAlignment="Center" Orientation="Horizontal">
                <ui:Button Margin="0,0,8,0" Appearance="Primary" Command="{Binding ViewModel.AddRootItemCommand}" Content="ルートタスク追加" Icon="Add" />
                <ui:Button
                    Margin="0,0,8,0"
                    Command="{Binding ViewModel.AddChildItemCommand}"
                    CommandParameter="{Binding ViewModel.SelectedItem}"
                    Content="子タスク追加" Icon="Add"
                    IsEnabled="{Binding ViewModel.CanAddChild}" />
                <ui:Button
                    Margin="0,0,8,0"
                    Command="{Binding ViewModel.AddMultipleChildrenCommand}"
                    CommandParameter="{Binding ViewModel.SelectedItem}"
                    Content="一括サブタスク追加" Icon="Add"
                    IsEnabled="{Binding ViewModel.CanAddChild}" />
                <ui:Button
                    Margin="0,0,8,0"
                    Command="{Binding ViewModel.AddBatchChildrenCommand}"
                    CommandParameter="{Binding ViewModel.SelectedItem}"
                    Content="バッチ追加(20個)" Icon="Add"
                    IsEnabled="{Binding ViewModel.CanAddChild}" />
                <ui:Button
                    Margin="0,0,8,0" Appearance="Danger"
                    Command="{Binding ViewModel.DeleteItemCommand}"
                    CommandParameter="{Binding ViewModel.SelectedItem}"
                    Content="削除" Icon="Delete"
                    IsEnabled="{Binding ViewModel.CanAddChild}" />

                <!--  設定オプション  -->
                <StackPanel Margin="0,0,16,0" VerticalAlignment="Center" Orientation="Horizontal">
                    <ui:ToggleSwitch Margin="0,0,8,0" Content="追加後編集モード" IsChecked="{Binding ViewModel.IsEditModeAfterAdd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <ui:TextBlock Margin="4,8,8,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="ON:追加後編集、OFF:連続追加" />
                    <ui:TextBlock Margin="4,8,0,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text="{Binding ViewModel.IsEditModeAfterAdd, StringFormat='現在のモード: {0}'}" />
                </StackPanel>

                <StackPanel Margin="0,0,16,0" VerticalAlignment="Center" Orientation="Horizontal">
                    <ui:ToggleSwitch Margin="0,0,8,0" Content="タスク詳細表示" IsChecked="{Binding ViewModel.IsTaskDetailVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <ui:TextBlock Margin="4,8,8,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="ON:詳細表示、OFF:詳細非表示" />
                    <ui:TextBlock Margin="4,8,0,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text="{Binding ViewModel.IsTaskDetailVisible, StringFormat='詳細表示: {0}'}" />
                </StackPanel>
            </StackPanel>
        </Grid>

        <!--  操作ボタンとフィルター  -->
        <StackPanel Grid.Row="1" Margin="0,8,0,16" Orientation="Horizontal">
            <!--  表示制御ボタン  -->
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.ExpandAllCommand}" Content="全展開" Icon="ChevronDown" />
            <ui:Button Margin="0,0,16,0" Command="{Binding ViewModel.CollapseAllCommand}" Content="全折りたたみ" Icon="ChevronUp" />

            <!--  スケジュール設定  -->
            <StackPanel Margin="0,0,16,0" Orientation="Horizontal">
                <ui:TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Text="スケジュール開始年月:" />
                <ComboBox x:Name="ScheduleStartYearMonthComboBox" Width="100" VerticalAlignment="Center" SelectedItem="{Binding ViewModel.ScheduleStartYearMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ScheduleStartYearMonthComboBox_SelectionChanged" />
                <ui:ToggleSwitch Margin="16,0,0,0" Content="今日の日付ライン" IsChecked="{Binding ViewModel.ShowTodayLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>

            <!--  先行・後続の関係性設定説明  -->
            <StackPanel Margin="0,0,16,0" Orientation="Horizontal">
                <ui:TextBlock Margin="0,8,8,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="先行タスク:" />
                <ui:TextBlock Margin="0,8,0,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="先行タスク列にドロップしたタスクが後続になる" />
            </StackPanel>

            <!--  依存関係矢印の表示設定  -->
            <StackPanel Margin="0,0,16,0" Orientation="Horizontal">
                <ui:ToggleSwitch Margin="0,0,8,0" Content="依存関係矢印" IsChecked="{Binding ViewModel.ShowDependencyArrows, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ui:TextBlock Margin="4,8,0,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="ON:矢印表示、OFF:矢印非表示" />
            </StackPanel>

            <!--  管理機能ボタン  -->
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.UpdateProgressCommand}" Content="進捗更新" Icon="Refresh" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.LimitHierarchyCommand}" Content="階層制限" Icon="Settings" />
            <ui:Button Margin="0,0,16,0" Command="{Binding ViewModel.SettingsCommand}" Content="設定" Icon="Settings" />

            <!--  データ操作ボタン  -->
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.RefreshCommand}" Content="更新" Icon="ArrowClockwise" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.CreateNewIssueCommand}" Content="チケット登録" Icon="Add" />
            <ui:Button
                Margin="0,0,8,0" Appearance="Success"
                Command="{Binding ViewModel.RegisterItemsCommand}"
                Content="{Binding ViewModel.NewItemsCount, StringFormat='登録 ({0})'}"
                Icon="CloudAdd"
                IsEnabled="{Binding ViewModel.CanRegisterItems}"
                ToolTip="新しく追加されたアイテムをRedmineに登録します" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.LoadRedmineDataCommand}" Content="Redmine読み込み" Icon="ArrowImportDown" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.RefreshRedmineDataCommand}" Content="Redmine更新" Icon="ArrowClockwise" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.ExportCommand}" Content="エクスポート" Icon="ArrowExportUp" />
            <ui:Button Margin="0,0,0,0" Command="{Binding ViewModel.ImportCommand}" Content="インポート" Icon="ArrowImportDown" />
        </StackPanel>

        <!--  接続状態とエラー表示  -->
        <Grid Grid.Row="2" Margin="0,0,0,16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  接続状態  -->
            <StackPanel Grid.Row="0" Margin="0,0,0,8" Orientation="Horizontal">
                <Border Margin="0,0,8,0" Padding="8,4" Background="{Binding ViewModel.IsRedmineConnected, Converter={x:Static helpers:BooleanToBrushConverter.Instance}}" CornerRadius="4">
                    <ui:TextBlock HorizontalAlignment="Center" FontTypography="Caption" Foreground="White" Text="{Binding ViewModel.ConnectionStatus}" />
                </Border>
            </StackPanel>

            <!--  エラーメッセージ  -->
            <ui:Card Grid.Row="1" Padding="12" BorderThickness="1" Visibility="{Binding ViewModel.ErrorMessage, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}">
                <ui:TextBlock FontTypography="Caption" Text="{Binding ViewModel.ErrorMessage}" TextWrapping="Wrap" />
            </ui:Card>
        </Grid>

        <!--  フィルターと検索  -->
        <Grid Grid.Row="3" Margin="0,0,0,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ui:TextBox Grid.Column="0" Margin="0,8,0,0" Icon="Search" PlaceholderText="タスクを検索..." Text="{Binding ViewModel.SearchText, UpdateSourceTrigger=PropertyChanged}" />

            <ui:ToggleSwitch Grid.Column="1" Margin="16,8,0,0" Content="完了" IsChecked="{Binding ViewModel.ShowCompleted}" />

            <ui:ToggleSwitch Grid.Column="2" Margin="16,8,0,0" Content="進行中" IsChecked="{Binding ViewModel.ShowInProgress}" />

            <ui:ToggleSwitch Grid.Column="3" Margin="16,8,0,0" Content="未着手" IsChecked="{Binding ViewModel.ShowNotStarted}" />
        </Grid>

        <!--  WBSツリービュー  -->
        <Grid x:Name="MainContentGrid" Grid.Row="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="DataGridColumn" Width="*" />
                <ColumnDefinition x:Name="TaskDetailColumn" Width="16" />
            </Grid.ColumnDefinitions>

            <!--  左側：DataGridと依存関係矢印の重ね表示  -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  DataGrid  -->
                <DataGrid
                    x:Name="WbsDataGrid" Grid.Row="0" MinHeight="200"
                    MaxHeight="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight}"
                    Margin="0,0,8,0" VerticalAlignment="Stretch" AllowDrop="True"
                    AlternatingRowBackground="{DynamicResource SubtleFillColorTertiaryBrush}"
                    AutoGenerateColumns="False"
                    Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{DynamicResource DividerStrokeColorDefaultBrush}"
                    BorderThickness="1" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True" CanUserResizeColumns="True"
                    CanUserSortColumns="True" DragEnter="WbsDataGrid_DragEnter" DragLeave="WbsDataGrid_DragLeave" Drop="WbsDataGrid_Drop" EnableColumnVirtualization="True"
                    EnableRowVirtualization="True" FrozenColumnCount="2" GridLinesVisibility="All" HeadersVisibility="Column"
                    ItemsSource="{Binding ViewModel.FlattenedWbsItems}"
                    RowBackground="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                    RowHeaderWidth="0" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.IsDeferredScrollingEnabled="False" ScrollViewer.PanningMode="Both"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    SelectedItem="{Binding ViewModel.SelectedItem, Mode=TwoWay}"
                    SelectionMode="Single" SelectionUnit="FullRow" VirtualizingPanel.CacheLength="3,3" VirtualizingPanel.CacheLengthUnit="Page" VirtualizingPanel.IsContainerVirtualizable="True"
                    VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.VirtualizationMode="Recycling">



                    <!--  依存関係の矢印を表示するレイヤー（最前面、スクロールバーの操作を妨げない）  -->

                    <DataGrid.Resources>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">
                                        <Border
                                            Margin="0,0,0,0"
                                            Padding="{TemplateBinding Padding}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            ClipToBounds="True">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorSecondaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Padding" Value="8,4" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridColumnHeader">
                                        <Border
                                            Margin="0,0,0,0"
                                            Padding="{TemplateBinding Padding}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            ClipToBounds="True">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SystemFillColorAttentionBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="ScrollBar">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                        </Style>
                        <Style TargetType="Thumb">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="RepeatButton">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <!--  日付ヘッダー用のスタイル  -->
                        <Style x:Key="DateHeaderStyle" TargetType="DataGridColumnHeader">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorSecondaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Padding" Value="2,2" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="FontSize" Value="8" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Height" Value="40" />
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <!--  ID列  -->
                        <DataGridTextColumn Width="80" Binding="{Binding Id}" Header="ID" IsReadOnly="True" />

                        <!--  タスク名列  -->
                        <DataGridTemplateColumn Width="300" Header="タスク名">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <!--  展開/折りたたみテキストとサブタスク数表示（軽量化版）  -->
                                        <StackPanel Grid.Column="0" Margin="0,0,8,0" Orientation="Horizontal" Visibility="{Binding HasChildren, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}">
                                            <TextBlock
                                                Margin="0,0,4,0" VerticalAlignment="Center" Cursor="Hand" FontSize="12" FontWeight="Bold"
                                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                MouseLeftButtonDown="ExpansionText_MouseLeftButtonDown"
                                                Text="{Binding IsExpanded, Converter={x:Static helpers:ExpansionToTextConverter.Instance}}" />
                                            <ui:TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="{Binding Children.Count, StringFormat='({0})'}" />
                                        </StackPanel>

                                        <!--  階層レベル表示  -->
                                        <Border
                                            Grid.Column="1" Padding="4,2" AllowDrop="True"
                                            Background="{Binding IsSelected, Converter={x:Static helpers:SelectionHighlightConverter.Instance}}"
                                            BorderBrush="{Binding IsSelected, Converter={x:Static helpers:SelectionBorderConverter.Instance}}"
                                            BorderThickness="1" CornerRadius="3" Cursor="Hand" DragEnter="TaskBorder_DragEnter" DragLeave="TaskBorder_DragLeave"
                                            Drop="TaskBorder_Drop" MouseLeftButtonDown="TaskBorder_MouseLeftButtonDown" MouseLeftButtonUp="TaskBorder_MouseLeftButtonUp" MouseMove="TaskBorder_MouseMove">
                                            <Border.InputBindings>
                                                <MouseBinding Command="{Binding DataContext.ViewModel.SelectItemCommand, RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}" MouseAction="LeftClick" />
                                            </Border.InputBindings>
                                            <StackPanel Margin="{Binding Level, Converter={x:Static helpers:LevelToIndentConverter.Instance}}" Orientation="Horizontal">
                                                <!--  階層インデント表示  -->
                                                <ui:TextBlock VerticalAlignment="Center" FontFamily="Consolas, Courier New, monospace" FontSize="11" Foreground="{Binding Level, Converter={x:Static helpers:LevelToColorConverter.Instance}}" Text="{Binding Level, Converter={x:Static helpers:LevelToIndentStringConverter.Instance}}" />
                                                <!--  タスクタイトル  -->
                                                <ui:TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontWeight="SemiBold" Text="{Binding Title}" />
                                            </StackPanel>
                                        </Border>

                                        <!--  コンテキストメニュー  -->
                                        <Grid.ContextMenu>
                                            <ContextMenu Opened="ContextMenu_Opened">
                                                <ui:MenuItem Header="サブタスク追加">
                                                    <ui:MenuItem.Icon>
                                                        <ui:SymbolIcon Symbol="Add16" />
                                                    </ui:MenuItem.Icon>
                                                </ui:MenuItem>
                                                <ui:MenuItem Header="編集">
                                                    <ui:MenuItem.Icon>
                                                        <ui:SymbolIcon Symbol="Edit16" />
                                                    </ui:MenuItem.Icon>
                                                </ui:MenuItem>
                                                <Separator />
                                                <ui:MenuItem Header="依存関係管理">
                                                    <ui:MenuItem.Icon>
                                                        <ui:SymbolIcon Symbol="Link16" />
                                                    </ui:MenuItem.Icon>
                                                    <ui:MenuItem Command="{Binding ViewModel.RemovePredecessorCommand}" CommandParameter="{Binding}" Header="先行タスクを削除" Visibility="{Binding HasPredecessors, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}">
                                                        <ui:MenuItem.Icon>
                                                            <ui:SymbolIcon Symbol="ArrowUp16" />
                                                        </ui:MenuItem.Icon>
                                                    </ui:MenuItem>
                                                    <ui:MenuItem Command="{Binding ViewModel.RemoveSuccessorCommand}" CommandParameter="{Binding}" Header="後続タスクを削除" Visibility="{Binding HasSuccessors, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}">
                                                        <ui:MenuItem.Icon>
                                                            <ui:SymbolIcon Symbol="ArrowDown16" />
                                                        </ui:MenuItem.Icon>
                                                    </ui:MenuItem>
                                                </ui:MenuItem>
                                                <Separator />
                                                <ui:MenuItem Header="削除">
                                                    <ui:MenuItem.Icon>
                                                        <ui:SymbolIcon Symbol="Delete16" />
                                                    </ui:MenuItem.Icon>
                                                </ui:MenuItem>
                                            </ContextMenu>
                                        </Grid.ContextMenu>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  説明列  -->
                        <DataGridTextColumn Width="200" Binding="{Binding Description}" Header="説明" IsReadOnly="True" />

                        <!--  開始日列  -->
                        <DataGridTemplateColumn Width="100" Header="開始日">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Padding="4,2" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                                        <ui:TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding StartDate, StringFormat=yyyy/MM/dd}" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <DatePicker
                                        DisplayDateEnd="2100-12-31" DisplayDateStart="1900-01-01" FirstDayOfWeek="Monday" GotFocus="DatePicker_GotFocus" IsTodayHighlighted="True"
                                        SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                                        SelectedDateChanged="DatePicker_SelectedDateChanged" SelectedDateFormat="Short" Tag="StartDate" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--  終了日列  -->
                        <DataGridTemplateColumn Width="100" Header="終了日">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Padding="4,2" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                                        <ui:TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding EndDate, StringFormat=yyyy/MM/dd}" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <DatePicker
                                        DisplayDateEnd="2100-12-31" DisplayDateStart="1900-01-01" FirstDayOfWeek="Monday" GotFocus="DatePicker_GotFocus" IsTodayHighlighted="True"
                                        SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                                        SelectedDateChanged="DatePicker_SelectedDateChanged" SelectedDateFormat="Short" Tag="EndDate" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--  進捗列  -->
                        <DataGridTemplateColumn Width="150" Header="進捗" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!--  プログレスバー  -->
                                        <Border
                                            Grid.Column="0" Height="16" Margin="0,0,8,0"
                                            Background="{DynamicResource SubtleFillColorTertiaryBrush}"
                                            BorderBrush="{DynamicResource DividerStrokeColorDefaultBrush}"
                                            BorderThickness="1" CornerRadius="2">
                                            <Border Width="{Binding TotalProgress, Converter={x:Static helpers:ProgressToWidthConverter.Instance}}" HorizontalAlignment="Left" Background="{Binding TotalProgress, Converter={x:Static helpers:ProgressToColorConverter.Instance}}" CornerRadius="1" />
                                        </Border>

                                        <!--  進捗テキスト  -->
                                        <ui:TextBlock
                                            Grid.Column="1" MinWidth="40" VerticalAlignment="Center" FontSize="10" FontWeight="SemiBold"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            Text="{Binding TotalProgress, StringFormat='{}{0:F0}%'}" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  ステータス列  -->
                        <DataGridTemplateColumn Width="80" Header="ステータス" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Padding="4,2" Background="{Binding Status, Converter={x:Static helpers:StatusToBrushConverter.Instance}}" CornerRadius="2">
                                        <ui:TextBlock HorizontalAlignment="Center" FontSize="10" Foreground="White" Text="{Binding Status}" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  優先度列  -->
                        <DataGridTemplateColumn Width="80" Header="優先度" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Padding="4,2" Background="{Binding Priority, Converter={x:Static helpers:PriorityToBrushConverter.Instance}}" CornerRadius="2">
                                        <ui:TextBlock HorizontalAlignment="Center" FontSize="10" Foreground="White" Text="{Binding Priority}" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  担当者列  -->
                        <DataGridTextColumn Width="100" Binding="{Binding Assignee}" Header="担当者" IsReadOnly="True" />

                        <!--  先行・後続列  -->
                        <DataGridTemplateColumn Width="120" Header="先行タスク&#x0d;&#x0a;D&amp;D" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <!--  先行タスクID表示（後続タスクの行に表示）  -->
                                        <StackPanel Grid.Column="0" Margin="2,0" Orientation="Horizontal" Visibility="{Binding HasPredecessors, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}">
                                            <ui:TextBlock Foreground="Orange" Text="先行: " />
                                            <ui:TextBlock Foreground="Orange" Text="{Binding Predecessors, Converter={x:Static helpers:PredecessorsToIdStringConverter.Instance}}" />
                                        </StackPanel>

                                        <!--  ドロップターゲット（先行・後続設定用）- 常に表示  -->
                                        <Border
                                            Grid.Column="0" Padding="4,2" AllowDrop="True" Background="Transparent" BorderBrush="Transparent"
                                            BorderThickness="1" CornerRadius="2" DragEnter="DependencyDrop_DragEnter" DragLeave="DependencyDrop_DragLeave" Drop="DependencyDrop_Drop" />

                                        <!--  ツールチップ（詳細情報表示）  -->
                                        <Grid.ToolTip>
                                            <StackPanel MinWidth="250" MaxWidth="400">
                                                <ui:TextBlock Margin="0,0,0,12" FontSize="14" FontWeight="Bold" Text="先行・後続の関係性" />

                                                <!--  先行タスク  -->
                                                <StackPanel Margin="0,0,0,12" Visibility="{Binding HasPredecessors, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}">
                                                    <ui:SymbolIcon Width="12" Height="12" Margin="0,0,4,0" Foreground="Orange" Symbol="ArrowUp16" />
                                                    <ui:TextBlock FontSize="11" FontWeight="SemiBold" Text="{Binding Title}" />
                                                    <ui:TextBlock FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text=" (ID: " />
                                                    <ui:TextBlock FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="{Binding Id}" />
                                                    <ui:TextBlock FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text=")" />
                                                </StackPanel>

                                                <!--  後続タスク  -->
                                                <StackPanel Margin="0,0,0,12" Visibility="{Binding HasSuccessors, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}">
                                                    <ui:TextBlock Margin="0,0,0,4" FontSize="12" FontWeight="SemiBold" Foreground="Blue" Text="後続タスク:" />
                                                    <Border Padding="8,6" Background="#E3F2FD" BorderBrush="Blue" BorderThickness="1" CornerRadius="4">
                                                        <ItemsControl ItemsSource="{Binding Successors}">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <StackPanel Margin="0,2" Orientation="Horizontal">
                                                                        <ui:SymbolIcon Width="12" Height="12" Margin="0,0,4,0" Foreground="Blue" Symbol="ArrowDown16" />
                                                                        <ui:TextBlock FontSize="11" FontWeight="SemiBold" Text="{Binding Title}" />
                                                                        <ui:TextBlock FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text=" (ID: " />
                                                                        <ui:TextBlock FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="{Binding Id}" />
                                                                        <ui:TextBlock FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text=")" />
                                                                    </StackPanel>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </Border>
                                                </StackPanel>

                                                <!--  使用方法  -->
                                                <Border Padding="8,6" Background="#F5F5F5" BorderBrush="{DynamicResource TextFillColorSecondaryBrush}" BorderThickness="1" CornerRadius="4">
                                                    <ui:TextBlock FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="使用方法: タスク名をドラッグしてこの列にドロップすると先行関係を設定できます" TextWrapping="Wrap" />
                                                </Border>
                                            </StackPanel>
                                        </Grid.ToolTip>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  日付列はコードビハインドで動的に生成  -->
                    </DataGrid.Columns>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="Margin" Value="0,1" />
                            <Setter Property="AllowDrop" Value="True" />
                            <EventSetter Event="Drop" Handler="DataGridRow_Drop" />
                            <EventSetter Event="DragEnter" Handler="DataGridRow_DragEnter" />
                            <EventSetter Event="DragLeave" Handler="DataGridRow_DragLeave" />
                            <Style.Triggers>
                                <!--  先行タスクがある場合の強調表示  -->
                                <DataTrigger Binding="{Binding HasPredecessors}" Value="True">
                                    <Setter Property="Background" Value="#FFF8E1" />
                                </DataTrigger>

                                <!--  選択状態の優先度を上げる  -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#E5F3FF" />
                                    <Setter Property="BorderBrush" Value="Blue" />
                                    <Setter Property="BorderThickness" Value="2" />
                                </Trigger>

                                <!--  マウスオーバー状態  -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#F0F0F0" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.InputBindings>
                        <KeyBinding Key="Up" Command="{Binding ViewModel.MoveUpCommand}" />
                        <KeyBinding Key="Down" Command="{Binding ViewModel.MoveDownCommand}" />
                        <KeyBinding Key="Left" Command="{Binding ViewModel.MoveLeftCommand}" />
                        <KeyBinding Key="Right" Command="{Binding ViewModel.MoveRightCommand}" />
                    </DataGrid.InputBindings>
                </DataGrid>

                <!--  依存関係の矢印を表示するレイヤー（最前面、スクロールバーの操作を妨げない）  -->
                <Canvas
                    x:Name="DependencyArrowCanvas" Grid.Row="0" Grid.Column="0" Panel.ZIndex="1000" Background="Transparent"
                    IsHitTestVisible="False" />

                <!--  WBSデータ読み込み中のプログレスバーオーバーレイ  -->
                <Border Grid.Row="0" Grid.Column="0" Background="#80000066" Visibility="{Binding ViewModel.IsWbsLoading, Converter={x:Static helpers:BoolToVisibilityConverter.Instance}}" Panel.ZIndex="1001">
                    <Grid>
                        <StackPanel Width="300" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Margin="0,0,0,8" HorizontalAlignment="Center" FontSize="14" Foreground="White" Text="{Binding ViewModel.WbsProgressMessage}" />
                            <ProgressBar
                                Width="240" Height="8" HorizontalAlignment="Center"
                                IsIndeterminate="{Binding ViewModel.IsWbsLoading}"
                                Maximum="100"
                                Value="{Binding ViewModel.WbsProgress}" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <!--  右側：タスク詳細（エクスパンダー）  -->
            <ui:Card
                Grid.Column="1" Width="400" Padding="20" HorizontalAlignment="Right" VerticalAlignment="Top"
                Panel.ZIndex="999"
                Visibility="{Binding ViewModel.IsTaskDetailVisible, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}">
                <ui:Card.RenderTransform>
                    <TranslateTransform x:Name="TaskDetailTransform" X="400" />
                </ui:Card.RenderTransform>
                <ui:Card.Triggers>
                    <EventTrigger RoutedEvent="ui:Card.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="TaskDetailTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ui:Card.Triggers>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <ui:TextBlock Margin="0,0,0,20" FontTypography="Body" FontWeight="SemiBold" Text="タスク詳細" />

                        <ui:TextBlock Margin="0,40,0,0" FontTypography="Body" Text="タスクを選択してください" TextAlignment="Center" Visibility="{Binding ViewModel.SelectedItem, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}" />

                        <StackPanel Visibility="{Binding ViewModel.SelectedItem, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}">
                            <!--  基本情報  -->
                            <Expander Margin="0,0,0,16" Header="基本情報" IsExpanded="True">
                                <StackPanel>
                                    <!--  ID  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="ID" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.Id}" />

                                    <!--  タイトル  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="タイトル" />
                                    <ui:TextBox x:Name="TitleTextBox" KeyDown="TitleTextBox_KeyDown" PlaceholderText="タスクのタイトルを入力" Text="{Binding ViewModel.SelectedItem.Title, UpdateSourceTrigger=PropertyChanged}" />

                                    <!--  説明  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="説明" />
                                    <ui:TextBox
                                        x:Name="DescriptionTextBox" Height="80" AcceptsReturn="True" PlaceholderText="タスクの詳細説明を入力"
                                        Text="{Binding ViewModel.SelectedItem.Description, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </Expander>

                            <!--  スケジュール  -->
                            <Expander Margin="0,0,0,16" Header="スケジュール" IsExpanded="True">
                                <StackPanel>
                                    <!--  開始日  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="開始日" />
                                    <DatePicker
                                        DisplayDateEnd="2100-12-31" DisplayDateStart="1900-01-01" FirstDayOfWeek="Monday" IsTodayHighlighted="True"
                                        SelectedDate="{Binding ViewModel.SelectedItem.StartDate, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                                        SelectedDateChanged="DatePicker_SelectedDateChanged" SelectedDateFormat="Short" />

                                    <!--  終了日  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="終了日" />
                                    <DatePicker
                                        DisplayDateEnd="2100-12-31" DisplayDateStart="1900-01-01" FirstDayOfWeek="Monday" IsTodayHighlighted="True"
                                        SelectedDate="{Binding ViewModel.SelectedItem.EndDate, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                                        SelectedDateChanged="DatePicker_SelectedDateChanged" SelectedDateFormat="Short" />
                                </StackPanel>
                            </Expander>

                            <!--  進捗・ステータス  -->
                            <Expander Margin="0,0,0,16" Header="進捗・ステータス" IsExpanded="True">
                                <StackPanel>
                                    <!--  進捗  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="進捗" />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Slider
                                            x:Name="ProgressSlider" Grid.Column="0" IsSnapToTickEnabled="True" Maximum="100" Minimum="0"
                                            TickFrequency="10"
                                            Value="{Binding ViewModel.SelectedItem.Progress}" />
                                        <ui:TextBlock Grid.Column="1" Margin="8,0,0,0" VerticalAlignment="Center" FontTypography="Caption" Text="{Binding ViewModel.SelectedItem.Progress, StringFormat='{}{0:F0}%'}" />
                                    </Grid>

                                    <!--  ステータス  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="ステータス" />
                                    <ComboBox SelectedValue="{Binding ViewModel.SelectedItem.Status}">
                                        <ComboBoxItem Content="未着手" Tag="未着手" />
                                        <ComboBoxItem Content="進行中" Tag="進行中" />
                                        <ComboBoxItem Content="完了" Tag="完了" />
                                        <ComboBoxItem Content="保留" Tag="保留" />
                                        <ComboBoxItem Content="キャンセル" Tag="キャンセル" />
                                    </ComboBox>

                                    <!--  優先度  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="優先度" />
                                    <ComboBox SelectedValue="{Binding ViewModel.SelectedItem.Priority}">
                                        <ComboBoxItem Content="低" Tag="低" />
                                        <ComboBoxItem Content="中" Tag="中" />
                                        <ComboBoxItem Content="高" Tag="高" />
                                        <ComboBoxItem Content="緊急" Tag="緊急" />
                                    </ComboBox>
                                </StackPanel>
                            </Expander>

                            <!--  担当者・Redmine情報  -->
                            <Expander Margin="0,0,0,16" Header="担当者・Redmine情報" IsExpanded="False">
                                <StackPanel>
                                    <!--  担当者  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="担当者" />
                                    <ui:TextBox PlaceholderText="担当者名を入力" Text="{Binding ViewModel.SelectedItem.Assignee, UpdateSourceTrigger=PropertyChanged}" />

                                    <!--  Redmine情報  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="チケットID" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineIssueId}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="プロジェクト" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineProjectName}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="トラッカー" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineTracker}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="作成者" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineAuthor}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="作成日" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineCreatedOn, StringFormat=yyyy/MM/dd HH:mm}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="更新日" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineUpdatedOn, StringFormat=yyyy/MM/dd HH:mm}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="URL" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineUrl}" />
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </ui:Card>
        </Grid>
    </Grid>
</Page>
