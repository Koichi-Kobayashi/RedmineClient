<Page
    x:Class="RedmineClient.Views.Pages.WbsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:RedmineClient.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:RedmineClient.Models"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="WBS"
    d:DesignHeight="800"
    d:DesignWidth="1200"
    mc:Ignorable="d">

    <Grid Margin="5,0,5,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  プロジェクト選択  -->
        <Grid Grid.Row="0" Margin="0,8,0,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ui:TextBlock Grid.Column="0" Margin="0,8,8,0" VerticalAlignment="Center" Text="プロジェクト:" />

            <ComboBox
                x:Name="ProjectComboBox" Grid.Column="1" Margin="0,8,16,0" DisplayMemberPath="Name"
                IsEnabled="{Binding ViewModel.IsProjectSelectionReadOnly, Converter={x:Static helpers:BooleanInverseConverter.Instance}}"
                ItemsSource="{Binding ViewModel.AvailableProjects}"
                SelectedItem="{Binding ViewModel.SelectedProject, Mode=TwoWay}" />

            <ui:TextBlock Grid.Column="2" Margin="0,8,0,0" VerticalAlignment="Center" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text="{Binding ViewModel.ProjectSelectionDescription}" />
        </Grid>

        <!--  操作ボタンとフィルター  -->
        <StackPanel Grid.Row="1" Margin="0,8,0,16" Orientation="Horizontal">
            <!--  タスク管理ボタン  -->
            <ui:Button Margin="0,0,8,0" Appearance="Primary" Command="{Binding ViewModel.AddRootItemCommand}" Content="ルートタスク追加" Icon="Add" />
            <ui:Button
                Margin="0,0,8,0"
                Command="{Binding ViewModel.AddChildItemCommand}"
                CommandParameter="{Binding ViewModel.SelectedItem}"
                Content="子タスク追加" Icon="Add"
                IsEnabled="{Binding ViewModel.CanAddChild}" />
            <ui:Button
                Margin="0,0,8,0"
                Command="{Binding ViewModel.AddMultipleChildrenCommand}"
                CommandParameter="{Binding ViewModel.SelectedItem}"
                Content="一括サブタスク追加" Icon="Add"
                IsEnabled="{Binding ViewModel.CanAddChild}" />
            <ui:Button
                Margin="0,0,16,0" Appearance="Danger"
                Command="{Binding ViewModel.DeleteItemCommand}"
                CommandParameter="{Binding ViewModel.SelectedItem}"
                Content="削除" Icon="Delete"
                IsEnabled="{Binding ViewModel.CanAddChild}" />

            <!--  表示制御ボタン  -->
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.ExpandAllCommand}" Content="全展開" Icon="ChevronDown" />
            <ui:Button Margin="0,0,16,0" Command="{Binding ViewModel.CollapseAllCommand}" Content="全折りたたみ" Icon="ChevronUp" />

            <!--  設定オプション  -->
            <StackPanel Margin="0,0,16,0" Orientation="Horizontal">
                <ui:ToggleSwitch Margin="0,0,8,0" Content="追加後編集モード" IsChecked="{Binding ViewModel.IsEditModeAfterAdd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ui:TextBlock Margin="4,0,8,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="ON:追加後編集、OFF:連続追加" />
                <ui:TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text="{Binding ViewModel.IsEditModeAfterAdd, StringFormat='現在のモード: {0}'}" />
            </StackPanel>

            <StackPanel Margin="0,0,16,0" Orientation="Horizontal">
                <ui:ToggleSwitch Margin="0,0,8,0" Content="タスク詳細表示" IsChecked="{Binding ViewModel.IsTaskDetailVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ui:TextBlock Margin="4,0,8,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="ON:詳細表示、OFF:詳細非表示" />
                <ui:TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontSize="11" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text="{Binding ViewModel.IsTaskDetailVisible, StringFormat='詳細表示: {0}'}" />
            </StackPanel>

            <!--  スケジュール設定  -->
            <StackPanel Margin="0,0,16,0" Orientation="Horizontal">
                <ui:TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Text="スケジュール開始年月:" />
                <ComboBox x:Name="ScheduleStartYearMonthComboBox" Width="100" VerticalAlignment="Center" SelectedItem="{Binding ViewModel.ScheduleStartYearMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ScheduleStartYearMonthComboBox_SelectionChanged" />
            </StackPanel>

            <!--  管理機能ボタン  -->
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.UpdateProgressCommand}" Content="進捗更新" Icon="Refresh" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.LimitHierarchyCommand}" Content="階層制限" Icon="Settings" />
            <ui:Button Margin="0,0,16,0" Command="{Binding ViewModel.SettingsCommand}" Content="設定" Icon="Settings" />

            <!--  データ操作ボタン  -->
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.RefreshCommand}" Content="更新" Icon="ArrowClockwise" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.CreateNewIssueCommand}" Content="チケット登録" Icon="Add" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.LoadRedmineDataCommand}" Content="Redmine読み込み" Icon="ArrowImportDown" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.RefreshRedmineDataCommand}" Content="Redmine更新" Icon="ArrowClockwise" />
            <ui:Button Margin="0,0,8,0" Command="{Binding ViewModel.ExportCommand}" Content="エクスポート" Icon="ArrowExportUp" />
            <ui:Button Margin="0,0,0,0" Command="{Binding ViewModel.ImportCommand}" Content="インポート" Icon="ArrowImportDown" />
        </StackPanel>

        <!--  接続状態とエラー表示  -->
        <Grid Grid.Row="2" Margin="0,0,0,16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  接続状態  -->
            <StackPanel Grid.Row="0" Margin="0,0,0,8" Orientation="Horizontal">
                <Border Margin="0,0,8,0" Padding="8,4" Background="{Binding ViewModel.IsRedmineConnected, Converter={x:Static helpers:BooleanToBrushConverter.Instance}}" CornerRadius="4">
                    <ui:TextBlock HorizontalAlignment="Center" FontTypography="Caption" Foreground="White" Text="{Binding ViewModel.ConnectionStatus}" />
                </Border>

                <ui:ProgressRing Width="16" Height="16" Margin="8,0,0,0" IsIndeterminate="True" Visibility="{Binding ViewModel.IsLoading, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}" />
            </StackPanel>

            <!--  エラーメッセージ  -->
            <ui:Card Grid.Row="1" Padding="12" BorderThickness="1" Visibility="{Binding ViewModel.ErrorMessage, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}">
                <ui:TextBlock FontTypography="Caption" Text="{Binding ViewModel.ErrorMessage}" TextWrapping="Wrap" />
            </ui:Card>
        </Grid>

        <!--  フィルターと検索  -->
        <Grid Grid.Row="3" Margin="0,0,0,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ui:TextBox Grid.Column="0" Margin="0,8,0,0" Icon="Search" PlaceholderText="タスクを検索..." Text="{Binding ViewModel.SearchText, UpdateSourceTrigger=PropertyChanged}" />

            <ui:ToggleSwitch Grid.Column="1" Margin="16,8,0,0" Content="完了" IsChecked="{Binding ViewModel.ShowCompleted}" />

            <ui:ToggleSwitch Grid.Column="2" Margin="16,8,0,0" Content="進行中" IsChecked="{Binding ViewModel.ShowInProgress}" />

            <ui:ToggleSwitch Grid.Column="3" Margin="16,8,0,0" Content="未着手" IsChecked="{Binding ViewModel.ShowNotStarted}" />
        </Grid>

        <!--  WBSツリービュー  -->
        <Grid x:Name="MainContentGrid" Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="DataGridColumn" Width="*" />
                <ColumnDefinition x:Name="TaskDetailColumn" Width="16" />
            </Grid.ColumnDefinitions>

            <!--  左側：DataGrid  -->
            <ui:Card Grid.Column="0" Margin="0,0,8,0" VerticalAlignment="Top">
                <DataGrid
                    x:Name="WbsDataGrid" VerticalAlignment="Top"
                    AlternatingRowBackground="{DynamicResource SubtleFillColorTertiaryBrush}"
                    AutoGenerateColumns="False"
                    Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{DynamicResource DividerStrokeColorDefaultBrush}"
                    BorderThickness="0" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True" CanUserResizeColumns="True"
                    CanUserSortColumns="True" EnableColumnVirtualization="True" EnableRowVirtualization="True" FrozenColumnCount="2" GridLinesVisibility="Horizontal"
                    HeadersVisibility="Column"
                    ItemsSource="{Binding ViewModel.FlattenedWbsItems}"
                    RowBackground="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                    RowHeaderWidth="0" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
                    SelectedItem="{Binding ViewModel.SelectedItem, Mode=TwoWay}"
                    SelectionMode="Single" SelectionUnit="FullRow" VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling">

                    <DataGrid.Resources>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Padding" Value="8,4" />
                        </Style>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorSecondaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Padding" Value="8,4" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Style>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SystemFillColorAttentionBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="ScrollBar">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                        </Style>
                        <Style TargetType="Thumb">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="RepeatButton">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <!--  日付ヘッダー用のスタイル  -->
                        <Style x:Key="DateHeaderStyle" TargetType="DataGridColumnHeader">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorSecondaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Padding" Value="2,2" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="FontSize" Value="8" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Height" Value="40" />
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <!--  ID列  -->
                        <DataGridTextColumn Width="80" Binding="{Binding Id}" Header="ID" IsReadOnly="True" />

                        <!--  タスク名列  -->
                        <DataGridTemplateColumn Width="300" Header="タスク名">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <!--  展開/折りたたみボタンとサブタスク数表示  -->
                                        <StackPanel Grid.Column="0" Margin="0,0,8,0" Orientation="Horizontal" Visibility="{Binding HasChildren, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}">
                                            <ui:Button
                                                Appearance="Transparent" Background="Transparent" BorderBrush="Transparent"
                                                Command="{Binding DataContext.ViewModel.ToggleExpansionCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                                CommandParameter="{Binding}"
                                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                Icon="{Binding IsExpanded, Converter={x:Static helpers:ExpansionToIconConverter.Instance}}" />
                                            <ui:TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="{Binding Children.Count, StringFormat='({0})'}" />
                                        </StackPanel>

                                        <!--  階層レベル表示  -->
                                        <Border
                                            Grid.Column="1" Padding="4,2"
                                            Background="{Binding IsSelected, Converter={x:Static helpers:SelectionHighlightConverter.Instance}}"
                                            BorderBrush="{Binding IsSelected, Converter={x:Static helpers:SelectionBorderConverter.Instance}}"
                                            BorderThickness="1" CornerRadius="3" Cursor="Hand">
                                            <Border.InputBindings>
                                                <MouseBinding Command="{Binding DataContext.ViewModel.SelectItemCommand, RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}" MouseAction="LeftClick" />
                                            </Border.InputBindings>
                                            <StackPanel Margin="{Binding Level, Converter={x:Static helpers:LevelToIndentConverter.Instance}}" Orientation="Horizontal">
                                                <!--  階層インデント表示  -->
                                                <ui:TextBlock VerticalAlignment="Center" FontFamily="Consolas, Courier New, monospace" FontSize="11" Foreground="{Binding Level, Converter={x:Static helpers:LevelToColorConverter.Instance}}" Text="{Binding Level, Converter={x:Static helpers:LevelToIndentStringConverter.Instance}}" />
                                                <!--  タスクタイトル  -->
                                                <ui:TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontWeight="SemiBold" Text="{Binding Title}" />
                                            </StackPanel>
                                        </Border>

                                        <!--  コンテキストメニュー  -->
                                        <Grid.ContextMenu>
                                            <ContextMenu Opened="ContextMenu_Opened">
                                                <ui:MenuItem Header="サブタスク追加">
                                                    <ui:MenuItem.Icon>
                                                        <ui:SymbolIcon Symbol="Add16" />
                                                    </ui:MenuItem.Icon>
                                                </ui:MenuItem>
                                                <ui:MenuItem Header="編集">
                                                    <ui:MenuItem.Icon>
                                                        <ui:SymbolIcon Symbol="Edit16" />
                                                    </ui:MenuItem.Icon>
                                                </ui:MenuItem>
                                                <Separator />
                                                <ui:MenuItem Header="削除">
                                                    <ui:MenuItem.Icon>
                                                        <ui:SymbolIcon Symbol="Delete16" />
                                                    </ui:MenuItem.Icon>
                                                </ui:MenuItem>
                                            </ContextMenu>
                                        </Grid.ContextMenu>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  説明列  -->
                        <DataGridTextColumn Width="200" Binding="{Binding Description}" Header="説明" IsReadOnly="True" />

                        <!--  開始日列  -->
                        <DataGridTextColumn Width="100" Binding="{Binding StartDate, StringFormat=yyyy/MM/dd}" Header="開始日" IsReadOnly="True" />

                        <!--  終了日列  -->
                        <DataGridTextColumn Width="100" Binding="{Binding EndDate, StringFormat=yyyy/MM/dd}" Header="終了日" IsReadOnly="True" />

                        <!--  進捗列  -->
                        <DataGridTemplateColumn Width="120" Header="進捗" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:TextBlock MinWidth="40" VerticalAlignment="Center" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text="{Binding TotalProgress, StringFormat='{}{0:F0}%'}" />
                                        <ui:ProgressRing Width="16" Height="16" Margin="4,0,0,0" Progress="{Binding TotalProgress}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  ステータス列  -->
                        <DataGridTemplateColumn Width="80" Header="ステータス" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Padding="4,2" Background="{Binding Status, Converter={x:Static helpers:StatusToBrushConverter.Instance}}" CornerRadius="2">
                                        <ui:TextBlock HorizontalAlignment="Center" FontSize="10" Foreground="White" Text="{Binding Status}" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  優先度列  -->
                        <DataGridTemplateColumn Width="80" Header="優先度" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Padding="4,2" Background="{Binding Priority, Converter={x:Static helpers:PriorityToBrushConverter.Instance}}" CornerRadius="2">
                                        <ui:TextBlock HorizontalAlignment="Center" FontSize="10" Foreground="White" Text="{Binding Priority}" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  担当者列  -->
                        <DataGridTextColumn Width="100" Binding="{Binding Assignee}" Header="担当者" IsReadOnly="True" />

                        <!--  日付列はコードビハインドで動的に生成  -->
                    </DataGrid.Columns>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="Margin" Value="0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#E5F3FF" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#F0F0F0" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.InputBindings>
                        <KeyBinding Key="Up" Command="{Binding ViewModel.MoveUpCommand}" />
                        <KeyBinding Key="Down" Command="{Binding ViewModel.MoveDownCommand}" />
                        <KeyBinding Key="Left" Command="{Binding ViewModel.MoveLeftCommand}" />
                        <KeyBinding Key="Right" Command="{Binding ViewModel.MoveRightCommand}" />
                    </DataGrid.InputBindings>
                </DataGrid>
            </ui:Card>

            <!--  右側：タスク詳細（エクスパンダー）  -->
            <ui:Card
                Grid.Column="1" Width="400" Padding="20" HorizontalAlignment="Right" VerticalAlignment="Top"
                Visibility="{Binding ViewModel.IsTaskDetailVisible, Converter={x:Static helpers:BooleanToVisibilityConverter.Instance}}">
                <ui:Card.RenderTransform>
                    <TranslateTransform x:Name="TaskDetailTransform" X="400" />
                </ui:Card.RenderTransform>
                <ui:Card.Triggers>
                    <EventTrigger RoutedEvent="ui:Card.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="TaskDetailTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ui:Card.Triggers>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <ui:TextBlock Margin="0,0,0,20" FontTypography="Body" FontWeight="SemiBold" Text="タスク詳細" />

                        <ui:TextBlock Margin="0,40,0,0" FontTypography="Body" Text="タスクを選択してください" TextAlignment="Center" Visibility="{Binding ViewModel.SelectedItem, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}" />

                        <StackPanel Visibility="{Binding ViewModel.SelectedItem, Converter={x:Static helpers:ObjectToVisibilityConverter.Instance}}">
                            <!--  基本情報  -->
                            <Expander Margin="0,0,0,16" Header="基本情報" IsExpanded="True">
                                <StackPanel>
                                    <!--  ID  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="ID" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.Id}" />

                                    <!--  タイトル  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="タイトル" />
                                    <ui:TextBox x:Name="TitleTextBox" KeyDown="TitleTextBox_KeyDown" PlaceholderText="タスクのタイトルを入力" Text="{Binding ViewModel.SelectedItem.Title, UpdateSourceTrigger=PropertyChanged}" />

                                    <!--  説明  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="説明" />
                                    <ui:TextBox
                                        x:Name="DescriptionTextBox" Height="80" AcceptsReturn="True" PlaceholderText="タスクの詳細説明を入力"
                                        Text="{Binding ViewModel.SelectedItem.Description, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </Expander>

                            <!--  スケジュール  -->
                            <Expander Margin="0,0,0,16" Header="スケジュール" IsExpanded="True">
                                <StackPanel>
                                    <!--  開始日  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="開始日" />
                                    <ui:TextBox x:Name="StartDateTextBox" KeyDown="DateTextBox_KeyDown" KeyUp="DateTextBox_KeyUp" PlaceholderText="yyyy/MM/dd" Text="{Binding ViewModel.SelectedItem.StartDate, StringFormat=yyyy/MM/dd, UpdateSourceTrigger=PropertyChanged}" />

                                    <!--  終了日  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="終了日" />
                                    <ui:TextBox x:Name="EndDateTextBox" KeyDown="DateTextBox_KeyDown" KeyUp="DateTextBox_KeyUp" PlaceholderText="yyyy/MM/dd" Text="{Binding ViewModel.SelectedItem.EndDate, StringFormat=yyyy/MM/dd, UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </Expander>

                            <!--  進捗・ステータス  -->
                            <Expander Margin="0,0,0,16" Header="進捗・ステータス" IsExpanded="True">
                                <StackPanel>
                                    <!--  進捗  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="進捗" />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Slider
                                            x:Name="ProgressSlider" Grid.Column="0" IsSnapToTickEnabled="True" Maximum="100" Minimum="0"
                                            TickFrequency="10"
                                            Value="{Binding ViewModel.SelectedItem.Progress}" />
                                        <ui:TextBlock Grid.Column="1" Margin="8,0,0,0" VerticalAlignment="Center" FontTypography="Caption" Text="{Binding ViewModel.SelectedItem.Progress, StringFormat='{}{0:F0}%'}" />
                                    </Grid>

                                    <!--  ステータス  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="ステータス" />
                                    <ComboBox SelectedValue="{Binding ViewModel.SelectedItem.Status}">
                                        <ComboBoxItem Content="未着手" Tag="未着手" />
                                        <ComboBoxItem Content="進行中" Tag="進行中" />
                                        <ComboBoxItem Content="完了" Tag="完了" />
                                        <ComboBoxItem Content="保留" Tag="保留" />
                                        <ComboBoxItem Content="キャンセル" Tag="キャンセル" />
                                    </ComboBox>

                                    <!--  優先度  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="優先度" />
                                    <ComboBox SelectedValue="{Binding ViewModel.SelectedItem.Priority}">
                                        <ComboBoxItem Content="低" Tag="低" />
                                        <ComboBoxItem Content="中" Tag="中" />
                                        <ComboBoxItem Content="高" Tag="高" />
                                        <ComboBoxItem Content="緊急" Tag="緊急" />
                                    </ComboBox>
                                </StackPanel>
                            </Expander>

                            <!--  担当者・Redmine情報  -->
                            <Expander Margin="0,0,0,16" Header="担当者・Redmine情報" IsExpanded="False">
                                <StackPanel>
                                    <!--  担当者  -->
                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="担当者" />
                                    <ui:TextBox PlaceholderText="担当者名を入力" Text="{Binding ViewModel.SelectedItem.Assignee, UpdateSourceTrigger=PropertyChanged}" />

                                    <!--  Redmine情報  -->
                                    <ui:TextBlock Margin="0,16,0,4" FontTypography="Caption" FontWeight="SemiBold" Text="チケットID" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineIssueId}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="プロジェクト" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineProjectName}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="トラッカー" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineTracker}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="作成者" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineAuthor}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="作成日" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineCreatedOn, StringFormat=yyyy/MM/dd HH:mm}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="更新日" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineUpdatedOn, StringFormat=yyyy/MM/dd HH:mm}" />

                                    <ui:TextBlock Margin="0,8,0,4" FontTypography="Caption" Text="URL" />
                                    <ui:TextBox IsReadOnly="True" Text="{Binding ViewModel.SelectedItem.RedmineUrl}" />
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </ui:Card>
        </Grid>
    </Grid>
</Page>
